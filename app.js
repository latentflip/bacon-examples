// Generated by CoffeeScript 1.3.3
(function() {
  var biggerS, buttonS, delay, drawS, inputS, pMap, scale, textS, time, tn;

  tn = new Date().valueOf();

  scale = d3.scale.linear().range([0, 600]).domain([tn - 10000, tn]);

  time = Bacon.fromPoll(1000 / 30, function() {
    return new Bacon.Next(new Date().valueOf());
  });

  time.map(function(t) {
    return [t - 10000, t];
  }).assign(function(ds) {
    return scale.domain(ds);
  });

  pMap = function(fn) {
    return function(p) {
      return {
        v: fn(p.v),
        color: p.color
      };
    };
  };

  drawS = function(title, stream) {
    var circles, drawCircles, svg;
    svg = d3.select('#bacon').append('svg');
    svg.append('text').text(title).attr({
      x: 5,
      y: 15
    });
    console.log(svg);
    circles = [];
    stream = stream.map(function(p) {
      return {
        v: p.v,
        color: p.color,
        time: new Date().valueOf()
      };
    });
    stream.assign(function(c) {
      return circles.push(c);
    });
    drawCircles = function() {
      var sel;
      sel = svg.selectAll('circle').data(circles, function(d) {
        return d.time;
      });
      sel.enter().append('circle').attr({
        cy: 40,
        r: 20,
        cx: 20
      }).attr('fill', function(d) {
        return d.color;
      }).attr('r', function(d) {
        return d.v;
      });
      sel.attr('cx', function(d) {
        return scale(d.time);
      });
      return sel.exit().remove();
    };
    return time.assign(drawCircles);
  };

  
function get_random_color() {
  var letters = '0123456789ABCDEF'.split('');
    var color = '#';
    for (var i = 0; i < 6; i++ ) {
      color += letters[Math.round(Math.random() * 15)];
    }
    return color;
  }

;


  textS = $('#myInput').asEventStream('change', function(ev) {
    return parseInt($(ev.currentTarget).val());
  });

  buttonS = $('#myInputButton').asEventStream('click', function() {
    return 3;
  });

  textS = textS.map(function(v) {
    return {
      v: v,
      color: get_random_color()
    };
  });

  buttonS = buttonS.map(function(v) {
    return {
      v: v,
      color: get_random_color()
    };
  });

  inputS = textS.merge(buttonS);

  biggerS = inputS.map(pMap(function(v) {
    return v * 3;
  }));

  delay = 0;

  setInterval((function() {
    return delay = Math.random() * 2000;
  }), 100);

  drawS('Text Box Changes', textS);

  drawS('Button Changes', buttonS);

  drawS('Text and button changes merged', inputS);

  drawS('Merged mapped * 3', biggerS);

  drawS('FlatMap (add random delay)', biggerS.flatMap(function(p) {
    return Bacon.later(delay, p);
  }));

  drawS('FlatMapLatest (same random delay)', biggerS.flatMapLatest(function(p) {
    return Bacon.later(delay, p);
  }));

}).call(this);
